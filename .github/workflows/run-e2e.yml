name: Run E2E tests

on:
  deployment_status:

jobs:
  wait-for-vercel:
    if: ${{ github.event_name == 'deployment_status' && github.event.deployment_status.state == 'success' }}
    timeout-minutes: 60
    runs-on: ubuntu-latest
    outputs:
      deployments: ${{ steps.set-urls.outputs.deployments }}
    steps:
      - name: Wait for Vercel Deployment
        id: set-urls
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          TEAM_ID: team_CbbcZzr5hBahVwYDcJf0f3tN
        run: |
          declare -A PROJECTS=(
            ["sansa"]="prj_2ON1pBH3BXFDAOGpyuorGAV9b5mQ"
            ["ned"]="prj_aAip83ytHFRnVV7bq50Nh9c0GaMk"
            ["bran"]="prj_3PDlo66PRWY1B1fwfCtCOZoX7ror"
            ["arya"]="prj_DytZfE86EQiggEoKelCi1bvvH1Q8"
          )

          # Obtendo o nome correto da branch
          BRANCH_NAME="${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}"
          echo "🔍 Nome da branch detectada: $BRANCH_NAME"

          DEPLOYMENTS_JSON="{"

          for project in "${!PROJECTS[@]}"; do
            PROJECT_ID=${PROJECTS[$project]}
            echo "🔍 Verificando status do deployment para $project na branch $BRANCH_NAME..."

            READY=false

            for i in {1..10}; do
              RESPONSE=$(curl -s -H "Authorization: Bearer $VERCEL_TOKEN" \
                "https://api.vercel.com/v6/deployments?teamId=$TEAM_ID&projectId=$PROJECT_ID")

              echo "📜 Tentativa $i - Resposta da API para $project: $RESPONSE"

              DEPLOYMENT_DATA=$(echo "$RESPONSE" | jq -c --arg branch "$BRANCH_NAME" \
                '[.deployments[] | select(.meta.githubCommitRef == $branch)]')

              DEPLOYMENT_URL=$(echo "$DEPLOYMENT_DATA" | jq -r '.[0].meta.branchAlias')
              DEPLOYMENT_STATE=$(echo "$DEPLOYMENT_DATA" | jq -r '.[0].state')

              echo "🔎 [$project] Tentativa $i"
              echo "🌿 Branch verificada: $BRANCH_NAME"
              echo "➡️ URL Encontrada: ${DEPLOYMENT_URL:-Nenhuma}"
              echo "📌 Estado: ${DEPLOYMENT_STATE:-Desconhecido}"

              if [[ "$DEPLOYMENT_STATE" == "READY" && -n "$DEPLOYMENT_URL" && "$DEPLOYMENT_URL" != "null" ]]; then
                echo "✅ $project está pronto! URL: https://$DEPLOYMENT_URL"
                DEPLOYMENTS_JSON+="\"$project\":\"https://$DEPLOYMENT_URL\","
                READY=true
                break
              fi

              echo "⏳ $project ainda está em deployment... (tentativa $i/10)"
              sleep 20
            done

            if [[ "$READY" == "false" ]]; then
              echo "❌ Falha no deployment do projeto: $project"
              exit 1
            fi
          done

          DEPLOYMENTS_JSON="${DEPLOYMENTS_JSON%,}}"
          echo "deployments=$DEPLOYMENTS_JSON" >> $GITHUB_OUTPUT
          echo "🚀 Deployments finais: $DEPLOYMENTS_JSON"
